---
title: "Hands-on: studying the long-lasting effects of Tamoxifen treatment on the CNS transcriptome across sexes"
author: "Julien Roux, University of Basel, SIB"
date: "2024-06-24"
subtitle: "SIB days workshop: Incorporating biological sex as a variable in the design and analysis of biomedical research experiments"
format: 
  html: 
    toc: true
    toc-location: left
title-block-banner: true
editor: visual
knitr:
  opts_chunk: 
    collapse: false
    echo: true
    cache: true
    prompt: false
    tidy: true
    comment: #>
    message: false
---

# Introduction

The past decades have seen large calls for consideration of the sex dimension into research and clinical projects. However as we progress towards more frequent inclusion of this variable, the design of experiments evolved to be much more complex, [in particular challenging the analysis steps](https://www.cell.com/cell/fulltext/S0092-8674(24)00174-0).

In this hands-on session we would like to focus on a particular transcriptomic dataset where the sex variable was considered in addition to other variables of interest, and illustrate a differential expression analysis aiming at rigorously testing for sex differences and notably the presence of interactions between factors. Following on Frédéric's presentation, we would like to use this hands-on to draw your attention at power issues potentially affecting conclusions, and how to best report results of your analyses.

Today's dataset is described in this paper ["Tamoxifen induction of Cre recombinase does not cause long-lasting or sexually divergent responses in the CNS epigenome or transcriptome: implications for the design of aging studies"](https://link.springer.com/article/10.1007/s11357-019-00090-2), and focuses on the potential side effects of Tamoxifen treatment, widely used to induce CreERT2 activity in transgenic mouse systems. Tamoxifen acts as an antagonist of estrogen receptor (ER), which could cause differences in response across sexes.

![](Screenshot%202024-06-17%20at%2014.55.37.png)

# Loading data in R

```{r}
#| warning: false
#| message: true

## If packages are missing:
# install.packages("BiocManager")
# BiocManager::install("...")

## Setting up working directory
library(here)

library(tidyverse)
library(ggplot2)

## color palettes
library(RColorBrewer)
myPalette <- c(brewer.pal(9, "Set1"), brewer.pal(8, "Set2"))

## DE analysis
library(recount3)
library(DESeq2)
library(vsn)
library(edgeR)
library(SummarizedExperiment)
library(scater)
library(scuttle)

## Needed for GSEA
library(fgsea)
library(org.Mm.eg.db)
library(GO.db)

saveRDS(devtools::session_info(), "session_info_DESeq2.rds")
```

# Read in data

Raw and processed data are available from GEO [(accession GSE135752)](GEO:%20https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE135752)

Today we will load directly the reprocessed data from the [recount3 project](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-021-02533-6), a project which reprocessed uniformly thousands of bulk RNA-seq datasets from human and mouse. A [Bioconductor package](https://bioconductor.org/packages/3.17/bioc/html/recount3.html) allows to easily retrieve this data in the form of standard Bioconductor classes objects, such as `RangedSummarizedExperiment`.

![](wrench-and-hammer.png) Connect to the [recount3 study explorer](https://jhubiostatistics.shinyapps.io/recount3-study-explorer/) Shiny app and search for our dataset (accession "SRP218156").

![](elemental-tip.png) Another database of reprocessed datasets is GREIN, which provides interesting QC figures that could be helpful: http://www.ilincs.org/apps/grein/?gse=GSE135752

```{r}
## retrieve data frame listing all available projects in mouse
all_projects <- available_projects(organism = "mouse")
## Select our dataset
selected <- all_projects |> subset(project == "SRP218156")
## Create a RangedSummarizedExperiment object at the gene level
rse_gene <- create_rse(project_info = selected)

## The recount project records the sum of the base level coverage for each gene. These raw counts have to be transformed to "classical" read-counts to be processed by standard DE analysis tools 
assayNames(rse_gene)
assay(rse_gene, "counts") <- transform_counts(rse_gene)

## Information about our reprocessed dataset
metadata(rse_gene)
## Gene metadata
rowRanges(rse_gene)
rowData(rse_gene)
## Parse the Ensembl IDs (useful later)
rowData(rse_gene)$gene_id <- gsub("\\.\\d+$", "", rowData(rse_gene)$gene_id)
row.names(rse_gene) <- rowData(rse_gene)$gene_id

## Sample metadata: a lot of columns!
# colData(rse_gene)
recount3_cols <- colnames(colData(rse_gene))
## Group columns by source
sort(table(gsub("\\..*", "", recount3_cols)))

## The colData from SRA include the sample information. What does each column represent?
head(colData(rse_gene)[, grep("sra", recount3_cols)])
## This column corresponds to the sample name on GEO
table(rse_gene$sra.sample_title) 
## For some samples we have multiple runs (SRR IDs), let's sum their read counts
rse_gene <- aggregateAcrossCells(rse_gene, 
                                 ids = rse_gene$sra.sample_title, 
                                 statistics = "sum") 

## Simplify metadata columns of interest by parsing "sra.sample_attributes"
rse_gene$sex <- factor(strsplit2(rse_gene$sra.sample_attributes, split = "\\|")[,2])
levels(rse_gene$sex) <- gsub("Sex;;", "", levels(rse_gene$sex))

rse_gene$tissue <- factor(strsplit2(rse_gene$sra.sample_attributes, split = "\\|")[,3])
levels(rse_gene$tissue) <- gsub("source_name;;", "", levels(rse_gene$tissue))

rse_gene$treatment <- factor(strsplit2(rse_gene$sra.sample_attributes, split = "\\|")[,4])
levels(rse_gene$treatment) <- gsub("treatment;;", "", levels(rse_gene$treatment))
levels(rse_gene$treatment) <- gsub("\\s\\(Sunflower\\sOil\\)", "", levels(rse_gene$treatment))
## Relevel to have Vehicle as reference
rse_gene$treatment <- relevel(rse_gene$treatment, ref = "Vehicle")

## From the methods it seems that the 3 tissues were extracted from the same mouse
rse_gene$mouse <- factor(gsub("ctx|ret", "", rse_gene$sra.sample_title))

## Add grouping variable (grouping 2 factors together, will be useful later) and order levels in a logical way
rse_gene$group <- factor(paste0(rse_gene$treatment, ".", rse_gene$sex), levels=c("Vehicle.female", "Tamoxifen.female", "Vehicle.male", "Tamoxifen.male"))

## Overview of experiment design
dim(rse_gene) 
table(rse_gene$sex, rse_gene$treatment, rse_gene$tissue) 
```

# Gene filtering

```{r}
## Convert to DESeqDataSet object (ignore the design argument for now)
dds <- DESeqDataSet(rse_gene, design = ~ 1) 
## Apply count data transformation
vst <- varianceStabilizingTransformation(dds, blind = TRUE)
meanSdPlot(assay(vst), ranks=FALSE)

## Visualize distribution before filtering (protein-coding genes only)
plotDensities(assay(vst)[rowData(vst)$gene_type == "protein_coding", ], 
              group=dds$tissue, 
              col = myPalette, 
              legend="topright")

## One cortex sample is weird: let's remove it
dds <- dds[, colnames(dds) != "ctx962"]

## Filter lowly expressed genes
## We keep only rows that have a count of at least 10 for a minimal number of samples
smallestGroupSize <- 3
keep <- rowSums(counts(dds) >= 10) >= smallestGroupSize
table(keep)
dds <- dds[keep, ]

## Update vst object
vst <- varianceStabilizingTransformation(dds, blind = TRUE)
meanSdPlot(assay(vst), ranks=FALSE)

plotDensities(assay(vst),
              group=dds$group, 
              col=myPalette, 
              legend="topright")
plotDensities(assay(vst),
              group=dds$tissue, 
              col=myPalette, 
              legend="topright")
```

# QC checks

## Expression of *Xist* gene

Xist is a lncRNA regulating the X-chromosome inactivation process in mammals, used to equalize the dosage of X-linked genes between female (XX) and male (XY). It should thus be expressed only in female samples

```{r}
df <- assay(vst)[grep("Xist", rowData(dds)$gene_name), , drop=FALSE] |>
  as_tibble(rownames = NA) |> 
  rownames_to_column() |>
  dplyr::rename(Gene = rowname) |>
  pivot_longer(cols= colnames(assay(vst)), 
               names_to = "Sample",
               values_to = "Normalized expression") |> 
  left_join(y=as_tibble(colData(dds)), by = join_by("Sample" == "sra.sample_title")) |>
  left_join(y=as_tibble(rowData(dds)), by=join_by("Gene" == "gene_id"))
ggplot(df, aes(x=group, y=`Normalized expression`, colour=tissue, group=tissue)) +
  facet_wrap( ~ gene_name, scales = "free_y", ncol = 1) +
  geom_point(position = position_dodge(0.2), alpha = .8, size=2) +
  scale_colour_manual(values=myPalette[1:3]) +
  theme(axis.text.x = element_text(size=10, angle = 90, hjust = 1, vjust = 0.5))
```

## Expression of Y-chromosome genes

```{r}
## Chromosome information
levels(as.data.frame(rowRanges(dds))$seqnames)
## How many genes are left in our dataset after filtering?
table(as.data.frame(rowRanges(dds))$seqnames == "chrY")

df <- assay(vst)[as.data.frame(rowRanges(dds))$seqnames == "chrY", , drop=FALSE] |>
  as_tibble(rownames = NA) |> 
  rownames_to_column() |>
  dplyr::rename(Gene = rowname) |>
  pivot_longer(cols= colnames(assay(vst)), 
               names_to = "Sample",
               values_to = "Normalized expression") |> 
  left_join(y=as_tibble(colData(dds)), by = join_by("Sample" == "sra.sample_title")) |>
  left_join(y=as_tibble(rowData(dds)), by=join_by("Gene" == "gene_id"))
ggplot(df, aes(x=group, y=`Normalized expression`, colour=tissue, group=tissue)) +
  facet_wrap( ~ gene_name, scales = "free_y", ncol = 4) +
  geom_point(position = position_dodge(0.2), alpha = .8, size=2) +
  scale_colour_manual(values=myPalette[1:3]) +
  theme(axis.text.x = element_text(size=10, angle = 90, hjust = 1, vjust = 0.5))
```

![](round-help-button.png) What do you observe? What is going on for some genes? (e.g., *Gm20775*)

![](elemental-tip.png) Bigwig files are available through recount3 for some of the samples and allow to visualize the read coverage (for example on the Y-chromosome) on a genome browser. For example you can provide these links to the UCSC genome browser directly:

```{r}
tail(dds$BigWigURL)
```

## Principal component analysis

```{r pca}
## PCA on top 500 most variable genes
plotPCA(vst, 
        ntop = 500,
        intgroup=c("tissue", "treatment"),
        pcsToUse = 1:2) +
  scale_colour_manual(values=myPalette[1:6]) +
  coord_cartesian() 

## Which sample metadata associate to which PCs?
## Let's use the getExplanatoryPCs from scater package, which takes as input a SingleCellExperiment object containing dimensionality reduction results
select <- order(rowVars(assay(vst)))[seq_len(500)]
pca1 <- prcomp(t(assay(vst)[select,]))
sce <- SingleCellExperiment(assays = list(logcounts=assay(vst)),
                            reducedDims = list(PCA=pca1$x),
                            colData = colData(dds)) 
percentVar <- getExplanatoryPCs(sce, 
                                n_dimred = 10,
                                dimred = "PCA",
                                variables = c("sex", "treatment", "tissue", "mouse"))
percentVar
plotExplanatoryPCs(percentVar/100) 
```

![](round-help-button.png) To which principal components contribute which factors? Does this corresponds to the expectations? What do you conclude on the relative effect size of different factors?

```{r}
## Visualize some of these associations, for example sex with PC3
plotPCA(vst, 
        ntop = 500,
        intgroup=c("sex", "treatment"),
        pcsToUse = 2:3) +
  scale_colour_manual(values=myPalette[1:6]) +
  coord_cartesian() 
```

# Differential expression analysis

```{r de_analysis}
## Update design for DE analysis
design(dds) <- ~ 0 + group + tissue

## Launch differential expression analysis
dds <- DESeq(dds)
resultsNames(dds)

## Extract results for the different contrasts
# - Direct male vs. female comparison (in controls only) #######################
res <- results(dds, contrast=c("group", "Vehicle.male", "Vehicle.female"))
summary(res)
res <- cbind(res, rowData(dds)$gene_name)
head(res[order(res$pvalue),], n=10)
 
## For visualization: since we account for tissue, it makes sense to correct the expression values for this effect
mm <- model.matrix(~ group, colData(vst))
mat <- removeBatchEffect(assay(vst), batch=vst$tissue, design=mm)
vst.corrected <- vst
assay(vst.corrected) <- mat

df <- assay(vst.corrected)[row.names(head(res[order(res$pvalue),], n=10)), ] |>
  as_tibble(rownames = NA) |> 
  rownames_to_column() |>
  dplyr::rename(Gene = rowname) |>
  pivot_longer(cols= colnames(assay(vst.corrected)), 
               names_to = "Sample",
               values_to = "Normalized expression") |> 
  left_join(y=as_tibble(colData(dds)), by = join_by("Sample" == "sra.sample_title")) |>
  left_join(y=as_tibble(rowData(dds)), by=join_by("Gene" == "gene_id"))
ggplot(df, aes(x=group, y=`Normalized expression`, group=tissue, col=tissue)) +
  facet_wrap( ~ gene_name, scales = "free_y", ncol = 5) +
  geom_point(position = position_dodge(0.2), alpha = .8, size=2) +
  scale_colour_manual(values=myPalette[1:3]) +
  theme(axis.text.x = element_text(size=10, angle = 90, hjust = 1, vjust = 0.5))

# - effect of Tamoxifen treatment in males #####################################
res <- results(dds, contrast=c("group", "Tamoxifen.male", "Vehicle.male"))
summary(res)
res <- cbind(res, rowData(dds)$gene_name)
head(res[order(res$pvalue),], n=10)

df <- assay(vst.corrected)[row.names(head(res[order(res$pvalue),], n=10)), ] |>
  as_tibble(rownames = NA) |> 
  rownames_to_column() |>
  dplyr::rename(Gene = rowname) |>
  pivot_longer(cols= colnames(assay(vst.corrected)), 
               names_to = "Sample",
               values_to = "Normalized expression") |> 
  left_join(y=as_tibble(colData(dds)), by = join_by("Sample" == "sra.sample_title")) |>
  left_join(y=as_tibble(rowData(dds)), by=join_by("Gene" == "gene_id"))
ggplot(df, aes(x=group, y=`Normalized expression`, group=tissue, col=tissue)) +
  facet_wrap( ~ gene_name, scales = "free_y", ncol = 5) +
  geom_point(position = position_dodge(0.2), alpha = .8, size=2) +
  scale_colour_manual(values=myPalette[1:3]) +
  theme(axis.text.x = element_text(size=10, angle = 90, hjust = 1, vjust = 0.5))

# - effect of Tamoxifen treatment in females ###################################
res <- results(dds, contrast=c("group", "Tamoxifen.female", "Vehicle.female"))
summary(res)
res <- cbind(res, rowData(dds)$gene_name)
head(res[order(res$pvalue),], n=10)

df <- assay(vst.corrected)[row.names(head(res[order(res$pvalue),], n=10)), ] |>
  as_tibble(rownames = NA) |> 
  rownames_to_column() |>
  dplyr::rename(Gene = rowname) |>
  pivot_longer(cols= colnames(assay(vst.corrected)), 
               names_to = "Sample",
               values_to = "Normalized expression") |> 
  left_join(y=as_tibble(colData(dds)), by = join_by("Sample" == "sra.sample_title")) |>
  left_join(y=as_tibble(rowData(dds)), by=join_by("Gene" == "gene_id"))
ggplot(df, aes(x=group, y=`Normalized expression`, group=tissue, col=tissue)) +
  facet_wrap( ~ gene_name, scales = "free_y", ncol = 5) +
  geom_point(position = position_dodge(0.2), alpha = .8, size=2) +
  scale_colour_manual(values=myPalette[1:3]) +
  theme(axis.text.x = element_text(size=10, angle = 90, hjust = 1, vjust = 0.5))
```

![](round-help-button.png) Do the number of DE genes correspond to your expectations from the PCA? What would you conclude on the difference of Tamoxifen effects in male and female? Are some of these genes described in the original paper?

```{r}
## See Fig 4e and f
data.frame(res[rowData(dds)$gene_name %in% c("Egr2", "Fos", "Dusp1", "Nr4a1", "Sik1", "Arc", "Egr1", "Plcl2", "Galnt9", "Per2", "Zbtb16", "Map3k13", "Banp"), ])
```


## Extracting the interaction term
We would like to identify genes reacting differently to Tamoxifen treatment in male and female. We need to update the design of our DESe2 object. See `?DESeq2::results` explaining how to extract this effect (Example 3)

```{r}
design(dds) <- ~ tissue + treatment * sex
dds <- DESeq(dds)
resultsNames(dds)
## Select last coefficient
res <- results(dds, name="treatmentTamoxifen.sexmale")
summary(res)
res <- cbind(res, rowData(dds)$gene_name)
head(res[order(res$pvalue),], n=10)

df <- assay(vst.corrected)[row.names(head(res[order(res$pvalue),], n=3)), ] |>
  as_tibble(rownames = NA) |> 
  rownames_to_column() |>
  dplyr::rename(Gene = rowname) |>
  pivot_longer(cols= colnames(assay(vst.corrected)), 
               names_to = "Sample",
               values_to = "Normalized expression") |> 
  left_join(y=as_tibble(colData(dds)), by = join_by("Sample" == "sra.sample_title")) |>
  left_join(y=as_tibble(rowData(dds)), by=join_by("Gene" == "gene_id"))
ggplot(df, aes(x=group, y=`Normalized expression`, group=tissue, col=tissue)) +
  facet_wrap( ~ gene_name, scales = "free_y", ncol = 5) +
  geom_point(position = position_dodge(0.2), alpha = .8, size=2) +
  scale_colour_manual(values=myPalette[1:3]) +
  theme(axis.text.x = element_text(size=10, angle = 90, hjust = 1, vjust = 0.5))

## Looking using uncorrected expression levels
df <- assay(vst)[row.names(head(res[order(res$pvalue),], n=3)), ] |>
  as_tibble(rownames = NA) |> 
  rownames_to_column() |>
  dplyr::rename(Gene = rowname) |>
  pivot_longer(cols= colnames(assay(vst)), 
               names_to = "Sample",
               values_to = "Normalized expression") |> 
  left_join(y=as_tibble(colData(dds)), by = join_by("Sample" == "sra.sample_title")) |>
  left_join(y=as_tibble(rowData(dds)), by=join_by("Gene" == "gene_id"))
ggplot(df, aes(x=group, y=`Normalized expression`, group=tissue, col=tissue)) +
  facet_wrap( ~ gene_name, scales = "free_y", ncol = 5) +
  geom_point(position = position_dodge(0.2), alpha = .8, size=2) +
  scale_colour_manual(values=myPalette[1:3]) +
  theme(axis.text.x = element_text(size=10, angle = 90, hjust = 1, vjust = 0.5))
```

![](round-help-button.png) What do you think about these results? Are these genes described in the original paper? How would you describe the behavior of these genes in (well chosen) simple words? 

# GSEA

It is possible that we detect few significant genes for the interaction but that some trends are visible collectively at the gene set level

```{r}
GOmapping <- AnnotationDbi::select(org.Mm.eg.db, 
                                   keys=rowData(dds)$gene_id, 
                                   keytype = "ENSEMBL", 
                                   columns=c("GOALL", "EVIDENCEALL", "ONTOLOGYALL")) 
## Transform to list
GOmapping <- tapply(GOmapping$ENSEMBL, list(GOmapping$GOALL), unique)
## Filter gene sets smaller than 10 genes, and gene sets larger than 500 genes
GOmapping <- GOmapping[sapply(GOmapping, length) >= 10 & sapply(GOmapping, length) < 500] 

## Run fastGSEA
ranks <- na.omit(setNames(res$log2FoldChange, nm=row.names(res)))
fgseaRes <- fgsea(pathways=GOmapping, stats=ranks)


## Add info on Gene Ontology terms
fgseaRes <- cbind(fgseaRes, AnnotationDbi::select(GO.db, 
                                                  keys=fgseaRes$pathway, 
                                                  keytype = "GOID", 
                                                  columns=c("ONTOLOGY", "TERM"))) #, "DEFINITION")))
table(fgseaRes$padj < 0.1)
head(fgseaRes[order(fgseaRes$pval), ], n=20)
```

# To finish

-   *"Interpretations of sex-related variation are not always commensurate with the story the data actually tell"* (Pape et al. 2024). How do you judge the interpretations of the results in the published paper?

-   Discuss potential limitations of the paper and the conclusion about the absence of Tamoxifen effect.

    -   What is important to notice in the design of the experiment (tamoxifen treatment duration, batches, number of replicates, ...)?
    -   Have a look at the results and materials and methods section: which analyses were made and how could they influence the results?

-   Limitations of our reanalysis: what could be improved if we had more time?

    -   Try subsetting the dataset to one tissue as done by the authors. What do you notice?

-   *"Sex is not a causal mechanism"* (Pape et al. 2024): follow-up on some DE genes and try to find which mechanism of action could explain their differential expression patterns.

-   Discuss what would be the next steps if that was your research project. Which experiments would you design next? How would you describe the results in a paper?

    -   You can also have a look at other related papers (e.g., https://www.nature.com/articles/s41586-022-04686-1, https://www.ahajournals.org/doi/10.1161/ATVBAHA.123.319922)
    -   Or look at follow-up papers from the same authors (e.g., https://link.springer.com/article/10.1007/s12035-022-02860-0)

<sub>Icons taken from http://www.flaticon.com/</sub>
